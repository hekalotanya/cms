{"version":3,"sources":["helpers/helpers.js","components/Article/Articles.jsx","components/NewArticle/NewArticle.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["articlesUrl","getArticles","a","fetch","articles","json","postArticle","data","result","posted","message","method","headers","body","JSON","stringify","ok","Articles","useState","loading","setLoading","setArticles","fetchArticles","useCallback","useEffect","className","Dimmer","active","Loader","content","Segment","Card","Group","centered","itemsPerRow","items","map","item","header","title","description","meta","id","NewArticle","values","setValues","type","setMessage","handleSubmit","article","trimmedTitle","trim","trimmedBody","handleChange","target","name","value","prev","Form","onSubmit","Field","htmlFor","onChange","placeholder","Button","Home","App","activeClassName","exact","to","path","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86055d08.chunk.js","sourcesContent":["const articlesUrl = 'https://hekalot-cms.herokuapp.com/articles';\n\nexport const getArticles = async() => {\n  const articles = await fetch(articlesUrl);\n\n  return articles.json();\n};\n\nexport const postArticle = async(data) => {\n  const result = {\n    posted: false,\n    message: '',\n  };\n\n  try {\n    const response = await fetch(articlesUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (response.ok) {\n      result.posted = true;\n      result.message = 'Article added, check /articles page';\n    }\n  } catch (e) {\n    result.message = e;\n  }\n\n  return result;\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Dimmer, Loader, Segment, Card } from 'semantic-ui-react';\nimport { getArticles } from '../../helpers/helpers';\nimport './Articles.scss';\n\nexport const Articles = () => {\n  const [loading, setLoading] = useState(false);\n  const [articles, setArticles] = useState([]);\n\n  const fetchArticles = useCallback(async() => {\n    setLoading(true);\n    const data = await getArticles();\n\n    setArticles(data);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchArticles();\n  }, [fetchArticles]);\n\n  return (\n    <div>\n      {loading\n        ? (\n          <div className=\"container\">\n            <Dimmer active>\n              <Loader content=\"Loading\" />\n            </Dimmer>\n          </div>\n        )\n        : (\n          <Segment>\n            <Card.Group\n              className=\"cards\"\n              centered\n              itemsPerRow={3}\n              items={articles.map(item => ({\n                header: item.title,\n                description: item.body,\n                meta: `Post id: ${item.id}`,\n              }))}\n            />\n          </Segment>\n        )}\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport './NewArticle.scss';\nimport { postArticle } from '../../helpers/helpers';\n\nexport const NewArticle = () => {\n  const [values, setValues] = useState({\n    title: '',\n    body: '',\n  });\n  const [message, setMessage] = useState({\n    type: '',\n    message: '',\n  });\n\n  const handleSubmit = useCallback(async() => {\n    let article = null;\n    const trimmedTitle = values.title.trim();\n    const trimmedBody = values.body.trim();\n\n    if (!trimmedTitle || !trimmedBody) {\n      setMessage({\n        type: 'error',\n        message: 'All fields are required!',\n      });\n      setValues({\n        title: trimmedTitle,\n        body: trimmedBody,\n      });\n\n      return;\n    }\n\n    article = await postArticle(values);\n\n    if (article?.posted) {\n      setValues({\n        title: '',\n        body: '',\n      });\n      setMessage({\n        type: 'posted',\n        message: article.message,\n      });\n    } else {\n      setMessage({\n        type: 'error',\n        message: article.message,\n      });\n    }\n  }, [values]);\n\n  const handleChange = useCallback(({ target: { name, value } }) => {\n    setMessage({\n      type: '',\n      message: '',\n    });\n    setValues(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Segment className=\"form-container\">\n        Create new article\n        <Form className=\"form\" onSubmit={handleSubmit}>\n          <Form.Field>\n            <label htmlFor=\"title\">Title</label>\n            <input\n              onChange={handleChange}\n              name=\"title\"\n              value={values.title}\n              id=\"title\"\n              placeholder=\"Article Title\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label htmlFor=\"body\">Body</label>\n            <textarea\n              onChange={handleChange}\n              name=\"body\"\n              value={values.body}\n              id=\"body\"\n              placeholder=\"Article Body\"\n            />\n          </Form.Field>\n          {message\n            && <div className={`${message.type}`}>{message.message}</div>\n          }\n          <Button type=\"submit\">Create an Article</Button>\n        </Form>\n      </Segment>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Home.scss';\n\nexport const Home = () => (\n  <div className=\"container\">\n    <h1 className=\"main-heading\">\n      CMS DEMO\n    </h1>\n    <h5 className=\"sub-heading\">\n      by Hekalo Tanya\n    </h5>\n  </div>\n);\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport { Articles } from './components/Article';\nimport { NewArticle } from './components/NewArticle';\nimport { Home } from './components/Home';\n\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport const App = () => (\n  <Router>\n    <div>\n      <nav>\n        <ul className=\"navigation\">\n          <li className=\"navigation__item\">\n            <NavLink\n              activeClassName=\"navigation__item--active\"\n              exact\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n          </li>\n          <li className=\"navigation__item\">\n            <NavLink\n              activeClassName=\"navigation__item--active\"\n              to=\"/articles\"\n            >\n              Articles\n            </NavLink>\n          </li>\n          <li className=\"navigation__item\">\n            <NavLink\n              activeClassName=\"navigation__item--active\"\n              to=\"/new-article\"\n            >\n              New Article\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/articles\">\n          <Articles />\n        </Route>\n        <Route path=\"/new-article\">\n          <NewArticle />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}